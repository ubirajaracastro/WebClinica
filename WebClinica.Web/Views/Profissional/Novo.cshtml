@model WebClinica.Web.Models.ProfissionalViewModel

@{
    if (Model.ProfissionalId > 0)
    {
        <input id="nomeCidade" type="hidden" value="@ViewBag.CidadeAtual" />
        <input id="codigoCidade" type="hidden" value="@ViewBag.CodigoCidadeAtual" />
    }


}

@using (Ajax.BeginForm("Salvar", "Profissional",
                            new AjaxOptions
                            {
                                OnSuccess = "OnSuccess",
                                OnFailure = "OnErro",
                                InsertionMode = InsertionMode.Replace,
                                HttpMethod = "POST"

                            }))

{
    @Html.AntiForgeryToken()
    <center>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-horizontal">
            <h4>Dados do Profissional de Saúde</h4>
            <hr />

            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.ProfissionalId)
                    @Html.HiddenFor(model => model.CidadeId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-3">
                    @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-3">
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-3">
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CodigoCBOOcupacao, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.CodigoCBOOcupacao, (SelectList)ViewBag.listaProfissao, "Selecione")
                    @Html.ValidationMessageFor(model => model.CodigoCBOOcupacao, "", new { @class = "text-danger" })
                    
                </div>
            </div>           

            <div class="form-group">
                @Html.Label("Registro Profissonal", new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.CodigoConselhoProfissional, (SelectList)ViewBag.Conselho, "Selecione")                
                    @Html.ValidationMessageFor(model => model.CodigoConselhoProfissional, "", new { @class = "text-danger" })                    
                </div>
            </div>

            <div class="form-group">
                @Html.Label("UF Registro", new { @class = "control-label col-md-2" })
                <div class="col-md-3">                   
                    @Html.DropDownListFor(model => model.CodigoUFConselhoProfisional, (SelectList)ViewBag.UF, "Selecione")                   
                    @Html.ValidationMessageFor(model => model.CodigoUFConselhoProfisional, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Registro, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-1">
                    @Html.EditorFor(model => model.Registro, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-1">
                    @Html.ValidationMessageFor(model => model.Registro, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-3">
                    @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-1">
                    @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EstadoID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.EstadoID, (SelectList)ViewBag.UF, "Selecione")

                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CidadeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <select id="Cidade" name="Cidade">
                        <option value="">Selecione</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Ativo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.CheckBoxFor(model => model.Ativo)
                </div>

            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary">Salvar</button>
                <button type="button" class="btn">Cancelar</button>
            </div>
        </div>
    </center>

    }


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/funcoes.js")
    @Scripts.Render("~/Scripts/Telas/Profissional.js")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.js")
}
